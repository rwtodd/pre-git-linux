(Also contains other logs since 0.97, the last entry in this repo)

Date:   Tue Sep 29 11:00:00 1992 -0800

    [PATCH] Linux-0.98 (September 29, 1992)
    
    Real networking (TCP) merged! This is the now-called "net-1" code by
    Ross Biro.  Boy, was it ugly, but it made for a big jump from not having
    any at all.
    
    (And add support for up the 32MB of memory ;)
    
    [Original announcement below]
    
    Sorry for being late - I can't even show any great new features in 0.98,
    but at least it's out now, and available at the normal place (ie at
    nic.funet.fi, pub/OS/Linux/testing/Linus).  So far there is only a
    full-source version available, although I'll probably make it available
    as a patch too tomorrow or so (but the patch won't contain the tcp/ip
    stuff).
    
    0.98 is essentially the same as 0.97.pl6 - the changes are mostly:
     - tcp/ip (0.8.1) is in.  It's not compiled into the standard bootimage,
       and you'd better be on the tcpip mailing-list to use it, but it's
       there. I've been unable to test it further than just watch it
       compile...
     - extfs patch to correct the problem with big directories with holes.
     - mouse patches (ie improved detection-routines)
     - minor scsi patches (ultrastor driver change)
     - swiss keyboard
     - some serial driver patches
     - the 32mb patches are in, so if you aren't using a DMA-SCSI driver,
       and have more than 16MB physical memory, you can get it recognized.
     - edited hd.c
     - corrected core-dumping routines
    
    I didn't get my mm patches working yet, so they'll have to wait.  The
    above are almost 100% by others - I have edited some of the patches, but
    there is nothing major new by me.  Most of it is minor bug-fixes, and
    the only thing that might be a bit of a problem are the hd.c changes:
    but I hope they'll solve more problems than they cause.  Knock wood.
    
    At nic.funet.fi you can currently find (a) the full sources (b) a
    bootimage (US keyboard, floppy root, no tcp/ip) and (c) the protocols.h
    file needed for compiling the tcp/ip directory (which should go into
    /usr/include/netinet/).  I hope people try it out, and that there are no
    new problems with this release.
    
                    Linus

Date:   Sun Sep 20 11:00:00 1992 -0800

    [PATCH] Linux-0.97.6 (September 20, 1992)
    
    Ted Ts'o did extensive serial driver changes, and fixed up some of the
    tty layer to match.  Tty's now allocated dynamically.
    
    [Original announcement below]
    
    This patch does not contain any major bug-fixes: it corrects named pipes
    that broke with pl5, and has some minor changes in the IO-instructions
    and the hd-driver, but those shouldn't matter for most of you.
    
    It does contain all the scsi-patches that I've gotten so far, so if the
    bootup sequence died on you in the scsi code, pl6 should correct this.
    
    The major part of the patch is tytso's serial line changes, making the
    tty structures dynamic.  No more NR_PTY's - the number of pty's is now
    bounded only by the minor number setup (max 64 pty's) or the amount of
    memory available (opening a pty requires a page of memory for tty
    queues).  Similarly for serial lines.
    
    The above just means that while pl6 can be useful, the changes to pl5
    aren't big enough to worry about.  Most people don't use named pipes, it
    seems, and the other changes are either cosmetic or hardware-dependent.
    I still hope people upgrade, if only so that I can get new bug-reports.
    
    I had hoped to release 0.98 this weekend, but studies and the scsi/hd
    problems put an end to that.  0.98 should be out next weekend or so.
    Expect the tcp/ip subdirectory and possibly some mm changes.
    
                    Linus

Date:   Sat Sep 12 11:00:00 1992 -0800

    [PATCH] Linux-0.97.5 (September 12, 1992)
    
    SCSI CD-ROM support by David Giller (based on sd.c by Drew)
    
    Microsoft Busmouse support by Teemu Rantanen
    
    Do the same buffer cleanups to extfs that we just did to Minixfs.
    
    Efficient VGA emulation in dosemu wanted to know when we write
    to the pseudo-VGA memory area. Add vm86 mode hooks for that.
    
    [Original announcement below]
    
    Patch 5 fixes the extended filesystem problems (thanks to Remy Card), as
    well as including many smaller fixes (some more fs cleanups, the CDROM
    patches and several other minor changes).  Pl5 finally removes even the
    last few header-files that were incompatible with the normal headers, so
    the "-nostdinc -I$(KERNELHDRS)" stuff is gone.
    
    Patch 5 should also fix the problems with iopl() that resulted in the
    X8514-server having problems with 0.97.pl2 and above.
    
    In case people are wondering, my schedule for 1.0 looks something like
    this:
    
     - 0.98 out in about a week: this is essentially 0.97.5 + the tcp/ip
       directory, as well as any fixes that may come up.  I'll try to get
       the loadable driver interface into it too.
    
     - 0.99 out after 0.98 has been shaken down: a month or so.
    
     - 1.0 will be the same as 0.99: the only changes will be eventual
       trivial bug-fixes in case 0.99 has some problems.  This is just to
       try to get over the "X.0" bug syndrome.
    
    There are a few on-going projects: depending on circumstances these will
    be implemented sooner or later, so I won't give any promises.  These
    include: loadable drivers/fs's (alpha-patches already availabla), full
    support for different block-sizes (some work still required), and a
    extensive rewrite of the mm routines (I'll want to make a vmm interface
    similar to the vfs interface for the filesystem routines).
    
                    Linus

Date:   Mon Sep 7 11:00:00 1992 -0800

    [PATCH] Linux-0.97.4 (September 7, 1992)
    
    Linus "dances with patches" Torvalds strikes again: I've already made
    patchlevel 4 of 0.97.  It may not be a new record, but it's close :-)
    
    Patch 4 is a very minor patch, but it's pretty important if you want a
    stable filesystem (and let's face it: most people seem to prefer a
    filesystem that stays up a bit longer).  While patch3 corrected most of
    the race-conditions in the minix fs, I overlooked the [f]truncate system
    calls, and this new patch corrects that.
    
    [f]truncate is a very race-prone function, and as if that wasn't enough,
    there was also a pretty bad error in truncate.c that resulted in the
    indirect blocks not being correctly marked dirty when doing partial
    truncates.  The latter problem is probably the reason for most of the
    filesystem corruptions that have been reported - the race-conditions
    were a lot harder to fix, but they also happen a lot less often.
    
    Note that the [f]truncate bug isn't new: it has been in the kernel since
    [f]truncate was first implemented (0.95?).  But until now, [f]truncate()
    hasn't actually been used very much - only the latest versions of the
    binutils have used ftruncate to strip binaries etc.  So the problem
    hasn't shown up that much.
    
    So while I consider patch4 to be crucial, you /can/ actually live
    without it: I haven't seen the buffer corruption problem at all (until I
    actually tested for it after getting good bug-reports), so you can
    provably miss it for a long time.  But if you have ever had corruption
    problems, I'd suggest upgrading to pl4 as soon as possible.
    
    The corruption problems show up most clearly when using a new "strip"
    binary, although they are theoretically possible with other programs
    too.  Thanks to "obz@raster.kodak.com" and "jon@robots.ox.ac.uk" for
    good bug-reports: thanks to them I was able to pin down the error to
    truncate.c, and after that it was pretty easy to get rid of it.
    
    Also note that this patch still hasn't fixed the extended filesystem: I
    suspect the same bugs lurk around there.  I'll get it corrected by 0.98
    at the latest.
    
    The patch is included at the end of this post (it's very minor - it
    contains patches mainly against linux/fs/minix/truncate.c) , and I'll
    also update nic.funet.fi (pub/OS/Linux/testing/Linus) to have the new
    sources.  Sorry for the inconvenience,
    
                    Linus

Date:   Sat Sep 5 11:00:00 1992 -0800

    [PATCH] Linux-0.97.3 (September 5, 1992)
    
    Hey, we switched to the GPL several months ago, but only now do we
    include the license text itself.  Apparently everybody expected
    everybody else to just know what the GPL was..
    
    Add a README on compiling the kernel (by Lasu)
    
    Add PS/2 mouse driver, make generic "mouse" infrastructure.
    
    Add /proc filesystem, clean up minixfs block mapping.
    
    sys_wait4() and swapoff().
    
    VM gets a "secondary page free" list for things like interrupts
    that want a page _now_ and can't wait for the regular free list
    to fill up.
    
    [Original announcement below]
    
    Patch3 is almost 100kB even compressed, as there were quite big changes
    in the mm and minix fs.  No major new features: there are two new system
    calls: swapoff(const char * swapfile) and wait4(), and linux accepts
    several swap-files, but the rest of the thing is mostly bug-fixes or
    simply rewrites.
    
    Major changes:
     - new swap-page handling: linux no longer uses just one bit to keep
       track of used swap-space, but a counter for each swap-page.  This
       allows processes to share swap-pages after a fork(), and should
       result in /major/ performance increases on machines with less memory.
       I've seen better performance even with 8MB - I wouldn't be surprised
       if 4MB machines would re-compile the kernel noticeably faster under
       pl3.  I'd be interested to hear numbers.
     - The low 1MB memory that isn't used directly by the kernel is now
       swappable memory, instead of being hardcoded for buffer cache.  The
       patches for this were originally by tytso, and I expanded on it a bit
       more.  This might also help better performance on 2-4MB machines.
       Note that this does /not/ mean that you can use 1M machines for
       linux: linux still needs some extended memory.
     - the dosfs has been upgraded to dosfs.8 - patches by almesber.
     - I edited the minix fs pretty heavily to remove a couple of race-
       conditions.  The same races still exist in the extended fs, as I
       didn't have time to edit that yet.  The minix-fs took precedence as I
       know that better, and extfs isn't "official" yet anyway.
    
    other changes:
    
     - the mouse-driver now handles both Logitech (minor = 0) and PS/2
       (minor = 1) busmice.
     - there is a proc-fs for access to user memory/files etc.
     - better support for the tcp/ip patches (but see below...)
     - corrected symlink and /dev/[k]mem behaviour
     - Lars Wirzenius' README (with minimal comments by me) and the GNU
       COPYING notice are now part of the normal kernel setup, and can be
       found in the tar-archive.
     - the floppy ioctl() to get the FD parameters no longer requires root
       priviledges.  Thus, the msdos emulator runs even for a normal user.
    
    Some comments on patchlevel 3:
    
            mm:
    
    The swap-page handling resulted in a reduction of swap-file (or
    partition) size to a maximum of 16MB per file.  It's nothing inherent to
    the code, but it eased some algorithms, so I didn't bother coding around
    it.  After all, 16MB is enough for most people, and if you want more,
    you can have up to 128 swapfiles of 16MB each.  If I get enough
    hate-mail about it, I might just try to find the energy to correct it.
    Maybe.
    
    Bigger swapfiles will still work, but linux will take advantage of only
    the low 16MB.  Also, there is no nifty logic to try to optimize the
    usage of the swap-files: pages are simply allocated from one swap-file
    until it fills up, and then the next swap-file is used.
    
    The memory management changes break ps/free once more, but not very
    much.  Also, I changed the load-average counting, so 'w' also needs
    slight editing.  On the other hand, I made '/dev/kmem' mmap()able, and
    'ps' and 'free' should be edited to take advantage of that: it should
    result in much faster operation, as well as possibly using less real
    memory.
    
            fs:
    
    The fs changes should remove at least two races - the races don't happen
    very often, but they were theoretically possible, and might be the
    reason for some fs corruption problems that have been reported.  The
    changes are related to the use of bmap() - the bmap interface doesn't
    really lend itself to some things that it was used for.  Re-writing
    internal fs-functions not to use bmap not only should have removed any
    races, but also actually resulted in cleaner code.
    
    The proc-fs code isn't too beautiful, and I'll probably leave it out
    from 0.98 unless I can make it loadable.  We'll see.  If anybody wants
    to use it, you can do something like
    
      # mount -t proc /dev/ram /proc
    
    Instead of /dev/ram you can use any block device - it's not used, and is
    only a dummy as the proc-fs doesn't actually use any external device.
    (but note that the device is still marked as mounted, so you cannot
    mount it for anything else).
    
            kernel/mm/lib:
    
    The TCP/IP patches are also essentially in 0.97.pl3 - not the full
    TCP/IP directory, only the patches to the main kernel.  NOTE!! I don't
    like the 'grab_malloc_pages()' function, so I left that out, and added a
    GFP_ATOMIC priority to get_free_page() that should be used instead.  I
    hope this will be used (Ross?), as it's a lot cleaner.
    
    Also, I hope the tcp/ip people will clean up malloc() so that it doesn't
    panic instead of returning NULL etc.  Ugly, ugly.  This is related to
    the get_free_page(GFP_ATOMIC) changes, and I'd like to have patches as
    soon as possible - tcp/ip won't be part of the standard kernel until
    that can be cleaned up.
    
                    Linus

Date:   Sun Aug 23 11:00:00 1992 -0800

    [PATCH] Linux-0.97.2 (August 23, 1992)
    
    We're making ready for big processes, and vm86 mode!
     - Move the kernel to virtual address 0xc0000000 instead of zero.
     - Allocate per-process page tables
    
    We can now have 3GB processes, and more than 64 of them!
    
    [Original announcement below]
    
    As promised, 0.97.pl2 is out today (well, over here it's already
    tomorrow, so I guess I'm 35 minutes late.  Naughty, naughty).  Right
    now, the patch (and full source for those that don't like to patch up
    the system) is available at "nic.funet.fi: pub/OS/Linux/testing/Linus",
    but I'll try to put it on some other sites as well if I'm able and
    energetic enough.  Probably tomorrow - together with a binary for those
    that aren't willing to comple the kernel on their own.
    
    0.97.2 has mostly my mm/fs patches, along with some relatively minor
    diffs by others (including file locking by Doug Evans).  User-level
    changes are minor: but the mm has changed a lot, and the vfs routines
    have been changed to keep track of the error-messages a bit better.
    Also, the vfs-interface to "follow_link()" changed slightly: people who
    are making filesystems should look at the changes (but they are
    relatively minor, and shouldn't result in any problems - both the
    extended fs and minix fs needed just a simple change in their respective
    symlink.c files).
    
    The mm changes /might/ lower performance slightly, as the paging TLB's
    are now flushed at every task-switch due to the new system, but I doubt
    it's noticeable.  The other performance changes (dynamic buffers etc) in
    0.97(.pl1) should overshadow that particular problem.
    
    I hope this release means that these kinds of low-level rewrites aren't
    needed for a while: the last couple of releases have changed some very
    fundamental things.  Nothing seems to have suffered too badly, but I'd
    be happier if it all got tested more thoroughly.  Anyway, discounting
    the ps/free etc suite of programs, everything I have tried has worked
    flawlessly despite the big kernel changes.
    
    I'm still worried about the reports about messed-up buffers, but have
    been unable to reproduce the problem, and nobody has so far
    disillusioned me about my guess that it's a problem with the SCSI code
    (which at least gives me an excuse for not doing anything about it :-).
    Other problems include at least one report of spontaneous re-booting,
    which is totally inexplicable, so I'm blaming hardware once more until I
    can get better data on the thing.
    
    As to patches sent by others: 0.97.2 contains very little of that kind
    of code.  I've been too busy either working, or implementing my own
    changes that I have simply ignored them for the most part.  Remind me
    (or resend them relative to the new kernel) if you have a patch that is
    still needed.
    
    There is one new system call: 'vm86(struct vm86_struct * info)'.  It's
    not ready for general use yet - it works, but will probably need some
    tweaking before being practical.  But supporting a virtual 86 mode was
    so easy after the mm rewrite that I felt it was worth implementing: the
    vm86 code is less than 50 lines of C right now.
    
                    Linus
    
    PS.  The bright spot of the week goes to "The Oxford Beer Trolls" - all
    UK inhabitants should probably be locked into some (big) mental
    institution and TOBT should probably have a wing of their own, but
    thanks to them linux can now call itself "beerware" :-)

Date:   Thu Aug 6 11:00:00 1992 -0800

    [PATCH] Linux-0.97.1 (August 6, 1992)
    
    Make the page allocator use a free page list instead of a silly
    linear search.
    
    Add sys_vhangup() and stubs for send/rcv/sendto/recvfrom/shutdown.
    We're making ready for real networking..
    
    Remove nonworking extfs bitmap allocators. We'll have them in ext2.
    
    [Original announcement below]
    
    Patch 1 is essentially a performance-release, but it also contains some
    other patches: Ross Biro's tcp-ip stubs are there (but not the tcpip
    subdirectory: alpha-testers should know where to find that), as are the
    ext-fs superblock cleanups. The first header-file patch by hlu is also
    in there.
    
    The resulting patch is pretty big - it's also not as cleaned up as I'd
    like it to be.  The swapping/buffer-block handling heuristics are
    better, but could still do with some tuning.  Also, the idle task in
    this version doesn't do very much: it will be expanded to do some more
    page-table calculations.
    
    I will be unable to hack on linux for a couple of weeks (I'll still
    answer mails, read the newsgroup and fix bugs, but no heavy-duty
    hacking) due to some "circumstances beyond my control".  That probably
    means that this patch is the last one for a while (three weeks) unless
    some bad bugs show up.
    
                    Linus

